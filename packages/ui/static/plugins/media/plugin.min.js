/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.1.6 (2020-01-28)
 */
!(function() {
    function e() {}
    function o(e) {
        return function() {
            return e;
        };
    }
    function t() {
        return u;
    }
    let r;
    const n = tinymce.util.Tools.resolve('tinymce.PluginManager');
    var d = function() {
        return (d =
            Object.assign ||
            function(e) {
                for (var t, r = 1, n = arguments.length; r < n; r++)
                    for (const i in (t = arguments[r]))
                        Object.prototype.hasOwnProperty.call(t, i) &&
                            (e[i] = t[i]);
                return e;
            }).apply(this, arguments);
    };
    const a = o(!1);
    const c = o(!0);
    var u =
        ((r = {
            fold(e, t) {
                return e();
            },
            is: a,
            isSome: a,
            isNone: c,
            getOr: l,
            getOrThunk: s,
            getOrDie(e) {
                throw new Error(e || 'error: getOrDie called on none.');
            },
            getOrNull: o(null),
            getOrUndefined: o(undefined),
            or: l,
            orThunk: s,
            map: t,
            each: e,
            bind: t,
            exists: a,
            forall: c,
            filter: t,
            equals: i,
            equals_: i,
            toArray() {
                return [];
            },
            toString: o('none()'),
        }),
        Object.freeze && Object.freeze(r),
        r);
    function i(e) {
        return e.isNone();
    }
    function s(e) {
        return e();
    }
    function l(e) {
        return e;
    }
    function m(t) {
        return function(e) {
            return (
                (function(e) {
                    if (e === null) return 'null';
                    const t = typeof e;
                    return t == 'object' &&
                        (Array.prototype.isPrototypeOf(e) ||
                            (e.constructor && e.constructor.name === 'Array'))
                        ? 'array'
                        : t == 'object' &&
                          (String.prototype.isPrototypeOf(e) ||
                              (e.constructor &&
                                  e.constructor.name === 'String'))
                        ? 'string'
                        : t;
                })(e) === t
            );
        };
    }
    function f(e, t) {
        for (let r = 0, n = e.length; r < n; r++) {
            t(e[r], r);
        }
    }
    function h(e, t) {
        return G(e, t) ? E(e[t]) : D();
    }
    function p(t) {
        return function(e) {
            return e
                ? (function(e) {
                      return e.replace(/px$/, '');
                  })(e.style[t])
                : '';
        };
    }
    function g(r) {
        return function(e, t) {
            e &&
                (e.style[r] = (function(e) {
                    return /^[0-9.]+$/.test(e) ? `${e}px` : e;
                })(t));
        };
    }
    function v(e, t) {
        if (e)
            for (let r = 0; r < e.length; r++)
                if (t.indexOf(e[r].filter) !== -1) return e[r];
    }
    function b(e) {
        return ae.getAttrib(e, 'data-ephox-embed-iri');
    }
    function w(e, t) {
        return (function(e) {
            const t = ae.createFragment(e);
            return b(t.firstChild) !== '';
        })(t)
            ? (function(e) {
                  const t = ae.createFragment(e).firstChild;
                  return {
                      type: 'ephox-embed-iri',
                      source1: b(t),
                      source2: '',
                      poster: '',
                      width: oe.getMaxWidth(t),
                      height: oe.getMaxHeight(t),
                  };
              })(t)
            : (function(n, e) {
                  let i = {};
                  return (
                      ne({
                          validate: !1,
                          allow_conditional_comments: !0,
                          start(e, t) {
                              if (
                                  (i.source1 ||
                                      e !== 'param' ||
                                      (i.source1 = t.map.movie),
                                  (e !== 'iframe' &&
                                      e !== 'object' &&
                                      e !== 'embed' &&
                                      e !== 'video' &&
                                      e !== 'audio') ||
                                      (i.type || (i.type = e),
                                      (i = re.extend(t.map, i))),
                                  e === 'script')
                              ) {
                                  const r = v(n, t.map.src);
                                  if (!r) return;
                                  i = {
                                      type: 'script',
                                      source1: t.map.src,
                                      width: String(r.width),
                                      height: String(r.height),
                                  };
                              }
                              e === 'source' &&
                                  (i.source1
                                      ? i.source2 || (i.source2 = t.map.src)
                                      : (i.source1 = t.map.src)),
                                  e !== 'img' ||
                                      i.poster ||
                                      (i.poster = t.map.src);
                          },
                      }).parse(e),
                      (i.source1 = i.source1 || i.src || i.data),
                      (i.source2 = i.source2 || ''),
                      (i.poster = i.poster || ''),
                      i
                  );
              })(e, t);
    }
    function y(e, t) {
        let r;
        let n;
        let i;
        let o;
        for (r in t)
            if (((i = `${t[r]}`), e.map[r]))
                for (n = e.length; n--; )
                    (o = e[n]).name === r &&
                        (i
                            ? ((e.map[r] = i), (o.value = i))
                            : (delete e.map[r], e.splice(n, 1)));
            else i && (e.push({ name: r, value: i }), (e.map[r] = i));
    }
    function x(e, t) {
        const r = me.createFragment(e).firstChild;
        return (
            oe.setMaxWidth(r, t.width),
            oe.setMaxHeight(r, t.height),
            (function(e) {
                const t = se();
                return ne(t).parse(e), t.getContent();
            })(r.outerHTML)
        );
    }
    function j(r, e) {
        const n = re.extend({}, e);
        if (!n.source1 && (re.extend(n, w(J(r), n.embed)), !n.source1))
            return '';
        n.source2 || (n.source2 = ''),
            n.poster || (n.poster = ''),
            (n.source1 = r.convertURL(n.source1, 'source')),
            (n.source2 = r.convertURL(n.source2, 'source')),
            (n.source1mime = ue(n.source1)),
            (n.source2mime = ue(n.source2)),
            (n.poster = r.convertURL(n.poster, 'poster'));
        const t = (function(t) {
            const e = fe.filter(function(e) {
                return e.regex.test(t);
            });
            return e.length > 0
                ? re.extend({}, e[0], {
                      url: (function(e, t) {
                          for (
                              var r = e.regex.exec(t),
                                  n = e.url,
                                  i = function(e) {
                                      n = n.replace(`$${e}`, function() {
                                          return r[e] ? r[e] : '';
                                      });
                                  },
                                  o = 0;
                              o < r.length;
                              o++
                          )
                              i(o);
                          return n.replace(/\?$/, '');
                      })(e[0], t),
                  })
                : null;
        })(n.source1);
        if (
            (t &&
                ((n.source1 = t.url),
                (n.type = t.type),
                (n.allowFullscreen = t.allowFullscreen),
                (n.width = n.width || String(t.w)),
                (n.height = n.height || String(t.h))),
            n.embed)
        )
            return de(n.embed, n, !0);
        const i = v(J(r), n.source1);
        i &&
            ((n.type = 'script'),
            (n.width = String(i.width)),
            (n.height = String(i.height)));
        const o = K(r);
        const a = Q(r);
        return (
            (n.width = n.width || '300'),
            (n.height = n.height || '150'),
            re.each(n, function(e, t) {
                n[t] = r.dom.encode(`${e}`);
            }),
            n.type === 'iframe'
                ? (function(e) {
                      const t = e.allowFullscreen ? ' allowFullscreen="1"' : '';
                      return `<iframe src="${e.source1}" width="${e.width}" height="${e.height}"${t}></iframe>`;
                  })(n)
                : n.source1mime === 'application/x-shockwave-flash'
                ? (function(e) {
                      let t = `<object data="${e.source1}" width="${e.width}" height="${e.height}" type="application/x-shockwave-flash">`;
                      return (
                          e.poster &&
                              (t += `<img src="${e.poster}" width="${e.width}" height="${e.height}" />`),
                          (t += '</object>')
                      );
                  })(n)
                : n.source1mime.indexOf('audio') !== -1
                ? (function(e, t) {
                      return t
                          ? t(e)
                          : `<audio controls="controls" src="${e.source1}">${
                                e.source2
                                    ? `\n<source src="${e.source2}"${
                                          e.source2mime
                                              ? ` type="${e.source2mime}"`
                                              : ''
                                      } />\n`
                                    : ''
                            }</audio>`;
                  })(n, o)
                : n.type === 'script'
                ? (function(e) {
                      return `<script src="${e.source1}"></script>`;
                  })(n)
                : (function(e, t) {
                      return t
                          ? t(e)
                          : `<video width="${e.width}" height="${e.height}"${
                                e.poster ? ` poster="${e.poster}"` : ''
                            } controls="controls">\n<source src="${e.source1}"${
                                e.source1mime ? ` type="${e.source1mime}"` : ''
                            } />\n${
                                e.source2
                                    ? `<source src="${e.source2}"${
                                          e.source2mime
                                              ? ` type="${e.source2mime}"`
                                              : ''
                                      } />\n`
                                    : ''
                            }</video>`;
                  })(n, a)
        );
    }
    function O(t) {
        return function(e) {
            return j(t, e);
        };
    }
    function A(e) {
        const r = q(e, {
            source1: e.source1.value,
            source2: h(e, 'source2')
                .bind(function(e) {
                    return h(e, 'value');
                })
                .getOr(''),
            poster: h(e, 'poster')
                .bind(function(e) {
                    return h(e, 'value');
                })
                .getOr(''),
        });
        return (
            h(e, 'dimensions').each(function(e) {
                f(['width', 'height'], function(t) {
                    h(e, t).each(function(e) {
                        return (r[t] = e);
                    });
                });
            }),
            r
        );
    }
    function S(e) {
        const n = q(e, {
            source1: { value: h(e, 'source1').getOr('') },
            source2: { value: h(e, 'source2').getOr('') },
            poster: { value: h(e, 'poster').getOr('') },
        });
        return (
            f(['width', 'height'], function(r) {
                h(e, r).each(function(e) {
                    const t = n.dimensions || {};
                    (t[r] = e), (n.dimensions = t);
                });
            }),
            n
        );
    }
    function _(r) {
        return function(e) {
            const t =
                e && e.msg
                    ? `Media embed handler error: ${e.msg}`
                    : 'Media embed handler threw unknown error.';
            r.notificationManager.open({ type: 'error', text: t });
        };
    }
    function C(e, t) {
        return w(J(e), t);
    }
    function M(i, o) {
        return function(e) {
            if (N(e.url) && e.url.trim().length > 0) {
                const t = e.html;
                const r = C(o, t);
                const n = { ...r, source1: e.url, embed: t };
                i.setData(S(n));
            }
        };
    }
    function F(e, t) {
        const r = e.dom.select('img[data-mce-object]');
        e.insertContent(t),
            (function(e, t) {
                for (
                    var r = e.dom.select('img[data-mce-object]'), n = 0;
                    n < t.length;
                    n++
                )
                    for (let i = r.length - 1; i >= 0; i--)
                        t[n] === r[i] && r.splice(i, 1);
                e.selection.select(r[0]);
            })(e, r),
            e.nodeChanged();
    }
    function P(e, t) {
        let r;
        const n = t.name;
        return (
            ((r = new ye('img', 1)).shortEnded = !0),
            Oe(e, t, r),
            r.attr({
                width: t.attr('width') || '300',
                height: t.attr('height') || (n === 'audio' ? '30' : '150'),
                style: t.attr('style'),
                src: xe.transparentSrc,
                'data-mce-object': n,
                class: `mce-object mce-object-${n}`,
            }),
            r
        );
    }
    function k(e, t) {
        let r;
        let n;
        let i;
        const o = t.name;
        return (
            (r = new ye('span', 1)).attr({
                contentEditable: 'false',
                style: t.attr('style'),
                'data-mce-object': o,
                class: `mce-preview-object mce-object-${o}`,
            }),
            Oe(e, t, r),
            (n = new ye(o, 1)).attr({
                src: t.attr('src'),
                allowfullscreen: t.attr('allowfullscreen'),
                style: t.attr('style'),
                class: t.attr('class'),
                width: t.attr('width'),
                height: t.attr('height'),
                frameborder: '0',
            }),
            (i = new ye('span', 1)).attr('class', 'mce-shim'),
            r.append(n),
            r.append(i),
            r
        );
    }
    function T(e) {
        for (; (e = e.parent); )
            if (
                e.attr('data-ephox-embed-iri') ||
                (void 0, (t = e.attr('class')) && /\btiny-pageembed\b/.test(t))
            )
                return !0;
        let t;
        return !1;
    }
    let $;
    var z = function(r) {
        function e() {
            return i;
        }
        function t(e) {
            return e(r);
        }
        const n = o(r);
        var i = {
            fold(e, t) {
                return t(r);
            },
            is(e) {
                return r === e;
            },
            isSome: c,
            isNone: a,
            getOr: n,
            getOrThunk: n,
            getOrDie: n,
            getOrNull: n,
            getOrUndefined: n,
            or: e,
            orThunk: e,
            map(e) {
                return z(e(r));
            },
            each(e) {
                e(r);
            },
            bind: t,
            exists: t,
            forall: t,
            filter(e) {
                return e(r) ? i : u;
            },
            toArray() {
                return [r];
            },
            toString() {
                return `some(${r})`;
            },
            equals(e) {
                return e.is(r);
            },
            equals_(e, t) {
                return e.fold(a, function(e) {
                    return t(r, e);
                });
            },
        };
        return i;
    };
    var D = t;
    var E = function(e) {
        return e === null || e === undefined ? u : z(e);
    };
    var N = m('string');
    const U = m('array');
    const R = m('function');
    const L = Array.prototype.slice;
    const W = Array.prototype.push;
    var H =
        (R(Array.from) && Array.from,
        function(e) {
            function t() {
                return r;
            }
            var r = e;
            return {
                get: t,
                set(e) {
                    r = e;
                },
                clone() {
                    return H(t());
                },
            };
        });
    const I = Object.prototype.hasOwnProperty;
    var q =
        (($ = function(e, t) {
            return t;
        }),
        function() {
            for (var e = new Array(arguments.length), t = 0; t < e.length; t++)
                e[t] = arguments[t];
            if (e.length === 0) throw new Error("Can't merge zero objects");
            for (var r = {}, n = 0; n < e.length; n++) {
                const i = e[n];
                for (const o in i) I.call(i, o) && (r[o] = $(r[o], i[o]));
            }
            return r;
        });
    const B = Object.hasOwnProperty;
    var G = function(e, t) {
        return B.call(e, t);
    };
    var J = function(e) {
        return e.getParam('media_scripts');
    };
    var K = function(e) {
        return e.getParam('audio_template_callback');
    };
    var Q = function(e) {
        return e.getParam('video_template_callback');
    };
    const V = function(e) {
        return e.getParam('media_live_embeds', !0);
    };
    const X = function(e) {
        return e.getParam('media_filter_html', !0);
    };
    const Y = function(e) {
        return e.getParam('media_url_resolver');
    };
    const Z = function(e) {
        return e.getParam('media_alt_source', !0);
    };
    const ee = function(e) {
        return e.getParam('media_poster', !0);
    };
    const te = function(e) {
        return e.getParam('media_dimensions', !0);
    };
    var re = tinymce.util.Tools.resolve('tinymce.util.Tools');
    var ne = tinymce.util.Tools.resolve('tinymce.html.SaxParser');
    const ie = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');
    var oe = {
        getMaxWidth: p('maxWidth'),
        getMaxHeight: p('maxHeight'),
        setMaxWidth: g('maxWidth'),
        setMaxHeight: g('maxHeight'),
    };
    var ae = ie.DOM;
    const ce = tinymce.util.Tools.resolve('tinymce.util.Promise');
    var ue = function(e) {
        const t = {
            mp3: 'audio/mpeg',
            m4a: 'audio/x-m4a',
            wav: 'audio/wav',
            mp4: 'video/mp4',
            webm: 'video/webm',
            ogg: 'video/ogg',
            swf: 'application/x-shockwave-flash',
        }[
            e
                .toLowerCase()
                .split('.')
                .pop()
        ];
        return t || '';
    };
    var se = tinymce.util.Tools.resolve('tinymce.html.Writer');
    const le = tinymce.util.Tools.resolve('tinymce.html.Schema');
    var me = ie.DOM;
    var de = function(e, t, r) {
        return (function(e) {
            const t = me.createFragment(e);
            return me.getAttrib(t.firstChild, 'data-ephox-embed-iri') !== '';
        })(e)
            ? x(e, t)
            : (function(e, i, o) {
                  let a;
                  const c = se();
                  let u = 0;
                  return (
                      ne(
                          {
                              validate: !1,
                              allow_conditional_comments: !0,
                              comment(e) {
                                  c.comment(e);
                              },
                              cdata(e) {
                                  c.cdata(e);
                              },
                              text(e, t) {
                                  c.text(e, t);
                              },
                              start(e, t, r) {
                                  switch (e) {
                                      case 'video':
                                      case 'object':
                                      case 'embed':
                                      case 'img':
                                      case 'iframe':
                                          i.height !== undefined &&
                                              i.width !== undefined &&
                                              y(t, {
                                                  width: i.width,
                                                  height: i.height,
                                              });
                                  }
                                  if (o)
                                      switch (e) {
                                          case 'video':
                                              y(t, {
                                                  poster: i.poster,
                                                  src: '',
                                              }),
                                                  i.source2 &&
                                                      y(t, { src: '' });
                                              break;
                                          case 'iframe':
                                              y(t, { src: i.source1 });
                                              break;
                                          case 'source':
                                              if (
                                                  ++u <= 2 &&
                                                  (y(t, {
                                                      src: i[`source${u}`],
                                                      type: i[`source${u}mime`],
                                                  }),
                                                  !i[`source${u}`])
                                              )
                                                  return;
                                              break;
                                          case 'img':
                                              if (!i.poster) return;
                                              a = !0;
                                      }
                                  c.start(e, t, r);
                              },
                              end(e) {
                                  if (e === 'video' && o)
                                      for (let t = 1; t <= 2; t++)
                                          if (i[`source${t}`]) {
                                              const r = [];
                                              (r.map = {}),
                                                  u < t &&
                                                      (y(r, {
                                                          src: i[`source${t}`],
                                                          type:
                                                              i[
                                                                  `source${t}mime`
                                                              ],
                                                      }),
                                                      c.start('source', r, !0));
                                          }
                                  if (i.poster && e === 'object' && o && !a) {
                                      const n = [];
                                      (n.map = {}),
                                          y(n, {
                                              src: i.poster,
                                              width: i.width,
                                              height: i.height,
                                          }),
                                          c.start('img', n, !0);
                                  }
                                  c.end(e);
                              },
                          },
                          le({}),
                      ).parse(e),
                      c.getContent()
                  );
              })(e, t, r);
    };
    var fe = [
        {
            regex: /youtu\.be\/([\w\-_\?&=.]+)/i,
            type: 'iframe',
            w: 560,
            h: 314,
            url: '//www.youtube.com/embed/$1',
            allowFullscreen: !0,
        },
        {
            regex: /youtube\.com(.+)v=([^&]+)(&([a-z0-9&=\-_]+))?/i,
            type: 'iframe',
            w: 560,
            h: 314,
            url: '//www.youtube.com/embed/$2?$4',
            allowFullscreen: !0,
        },
        {
            regex: /youtube.com\/embed\/([a-z0-9\?&=\-_]+)/i,
            type: 'iframe',
            w: 560,
            h: 314,
            url: '//www.youtube.com/embed/$1',
            allowFullscreen: !0,
        },
        {
            regex: /vimeo\.com\/([0-9]+)/,
            type: 'iframe',
            w: 425,
            h: 350,
            url:
                '//player.vimeo.com/video/$1?title=0&byline=0&portrait=0&color=8dc7dc',
            allowFullscreen: !0,
        },
        {
            regex: /vimeo\.com\/(.*)\/([0-9]+)/,
            type: 'iframe',
            w: 425,
            h: 350,
            url: '//player.vimeo.com/video/$2?title=0&amp;byline=0',
            allowFullscreen: !0,
        },
        {
            regex: /maps\.google\.([a-z]{2,3})\/maps\/(.+)msid=(.+)/,
            type: 'iframe',
            w: 425,
            h: 350,
            url: '//maps.google.com/maps/ms?msid=$2&output=embed"',
            allowFullscreen: !1,
        },
        {
            regex: /dailymotion\.com\/video\/([^_]+)/,
            type: 'iframe',
            w: 480,
            h: 270,
            url: '//www.dailymotion.com/embed/video/$1',
            allowFullscreen: !0,
        },
        {
            regex: /dai\.ly\/([^_]+)/,
            type: 'iframe',
            w: 480,
            h: 270,
            url: '//www.dailymotion.com/embed/video/$1',
            allowFullscreen: !0,
        },
    ];
    const he = {};
    const pe = function(e, t) {
        const r = Y(e);
        return r
            ? (function(n, i, o) {
                  return new ce(function(t, e) {
                      function r(e) {
                          return (
                              e.html && (he[n.source1] = e),
                              t({
                                  url: n.source1,
                                  html: e.html ? e.html : i(n),
                              })
                          );
                      }
                      he[n.source1]
                          ? r(he[n.source1])
                          : o({ url: n.source1 }, r, e);
                  });
              })(t, O(e), r)
            : (function(t, r) {
                  return new ce(function(e) {
                      e({ html: r(t), url: t.source1 });
                  });
              })(t, O(e));
    };
    const ge = function(e) {
        return he.hasOwnProperty(e);
    };
    const ve = function(n) {
        function i(e) {
            return A(e.getData());
        }
        const e = (function(e) {
            const t = e.selection.getNode();
            const r = (function(e) {
                return (
                    e.getAttribute('data-mce-object') ||
                    e.getAttribute('data-ephox-embed-iri')
                );
            })(t)
                ? e.serializer.serialize(t, { selection: !0 })
                : '';
            return q({ embed: r }, w(J(e), r));
        })(n);
        const r = H(e);
        const t = S(e);
        const o = {
            title: 'General',
            name: 'general',
            items: (function(e) {
                for (var t = [], r = 0, n = e.length; r < n; ++r) {
                    if (!U(e[r]))
                        throw new Error(
                            `Arr.flatten item ${r} was not an array, input: ${e}`,
                        );
                    W.apply(t, e[r]);
                }
                return t;
            })([
                [
                    {
                        name: 'source1',
                        type: 'urlinput',
                        filetype: 'media',
                        label: 'Source',
                    },
                ],
                te(n)
                    ? [
                          {
                              type: 'sizeinput',
                              name: 'dimensions',
                              label: 'Constrain proportions',
                              constrain: !0,
                          },
                      ]
                    : [],
            ]),
        };
        const a = {
            title: 'Embed',
            items: [
                {
                    type: 'textarea',
                    name: 'embed',
                    label: 'Paste your embed code below:',
                },
            ],
        };
        const c = [];
        Z(n) &&
            c.push({
                name: 'source2',
                type: 'urlinput',
                filetype: 'media',
                label: 'Alternative source URL',
            }),
            ee(n) &&
                c.push({
                    name: 'poster',
                    type: 'urlinput',
                    filetype: 'image',
                    label: 'Media poster (Image URL)',
                });
        const u = { title: 'Advanced', name: 'advanced', items: c };
        const s = [o, a];
        c.length > 0 && s.push(u);
        const l = { type: 'tabpanel', tabs: s };
        var m = n.windowManager.open({
            title: 'Insert/Edit Media',
            size: 'normal',
            body: l,
            buttons: [
                { type: 'cancel', name: 'cancel', text: 'Cancel' },
                {
                    type: 'submit',
                    name: 'save',
                    text: 'Save',
                    primary: !0,
                },
            ],
            onSubmit(e) {
                const t = i(e);
                !(function(e, t, r) {
                    (t.embed = de(t.embed, t)),
                        t.embed && (e.source1 === t.source1 || ge(t.source1))
                            ? F(r, t.embed)
                            : pe(r, t)
                                  .then(function(e) {
                                      F(r, e.html);
                                  })
                                  .catch(_(r));
                })(r.get(), t, n),
                    e.close();
            },
            onChange(e, t) {
                switch (t.name) {
                    case 'source1':
                        !(function(e, t) {
                            const r = i(t);
                            e.source1 !== r.source1 &&
                                (M(m, n)({ url: r.source1, html: '' }),
                                pe(n, r)
                                    .then(M(m, n))
                                    .catch(_(n)));
                        })(r.get(), e);
                        break;
                    case 'embed':
                        !(function(e) {
                            const t = A(e.getData());
                            const r = C(n, t.embed);
                            e.setData(S(r));
                        })(e);
                        break;
                    case 'dimensions':
                    case 'poster':
                        !(function(e) {
                            const t = i(e);
                            const r = j(n, t);
                            e.setData(S({ ...t, embed: r }));
                        })(e);
                }
                r.set(i(e));
            },
            initialData: t,
        });
    };
    const be = function(e) {
        return {
            showDialog() {
                ve(e);
            },
        };
    };
    const we = function(e) {
        e.addCommand('mceMedia', function() {
            ve(e);
        });
    };
    var ye = tinymce.util.Tools.resolve('tinymce.html.Node');
    var xe = tinymce.util.Tools.resolve('tinymce.Env');
    const je = function(i, e) {
        if (!1 === X(i)) return e;
        let o;
        const a = se();
        return (
            ne(
                {
                    validate: !1,
                    allow_conditional_comments: !1,
                    comment(e) {
                        a.comment(e);
                    },
                    cdata(e) {
                        a.cdata(e);
                    },
                    text(e, t) {
                        a.text(e, t);
                    },
                    start(e, t, r) {
                        if (((o = !0), e !== 'script' && e !== 'noscript')) {
                            for (let n = 0; n < t.length; n++) {
                                if (t[n].name.indexOf('on') === 0) return;
                                t[n].name === 'style' &&
                                    (t[n].value = i.dom.serializeStyle(
                                        i.dom.parseStyle(t[n].value),
                                        e,
                                    ));
                            }
                            a.start(e, t, r), (o = !1);
                        }
                    },
                    end(e) {
                        o || a.end(e);
                    },
                },
                le({}),
            ).parse(e),
            a.getContent()
        );
    };
    var Oe = function(e, t, r) {
        let n;
        let i;
        let o;
        let a;
        let c;
        for (a = (o = t.attributes).length; a--; )
            (n = o[a].name),
                (i = o[a].value),
                n !== 'width' &&
                    n !== 'height' &&
                    n !== 'style' &&
                    ((n !== 'data' && n !== 'src') || (i = e.convertURL(i, n)),
                    r.attr(`data-mce-p-${n}`, i));
        (c = t.firstChild && t.firstChild.value) &&
            (r.attr('data-mce-html', escape(je(e, c))), (r.firstChild = null));
    };
    const Ae = function(i) {
        return function(e) {
            for (var t, r, n = e.length; n--; )
                (t = e[n]).parent &&
                    (t.parent.attr('data-mce-object') ||
                        (t.name === 'script' &&
                            !(r = v(J(i), t.attr('src')))) ||
                        (r &&
                            (r.width && t.attr('width', r.width.toString()),
                            r.height && t.attr('height', r.height.toString())),
                        t.name === 'iframe' && V(i) && xe.ceFalse
                            ? T(t) || t.replace(k(i, t))
                            : T(t) || t.replace(P(i, t))));
        };
    };
    const Se = function(d) {
        d.on('preInit', function() {
            const t = d.schema.getSpecialElements();
            re.each('video audio iframe object'.split(' '), function(e) {
                t[e] = new RegExp(`</${e}[^>]*>`, 'gi');
            });
            const r = d.schema.getBoolAttrs();
            re.each(
                'webkitallowfullscreen mozallowfullscreen allowfullscreen'.split(
                    ' ',
                ),
                function(e) {
                    r[e] = {};
                },
            ),
                d.parser.addNodeFilter(
                    'iframe,video,audio,object,embed,script',
                    Ae(d),
                ),
                d.serializer.addAttributeFilter('data-mce-object', function(
                    e,
                    t,
                ) {
                    for (var r, n, i, o, a, c, u, s, l = e.length; l--; )
                        if ((r = e[l]).parent) {
                            for (
                                u = r.attr(t),
                                    n = new ye(u, 1),
                                    u !== 'audio' &&
                                        u !== 'script' &&
                                        ((s = r.attr('class')) &&
                                        s.indexOf('mce-preview-object') !== -1
                                            ? n.attr({
                                                  width: r.firstChild.attr(
                                                      'width',
                                                  ),
                                                  height: r.firstChild.attr(
                                                      'height',
                                                  ),
                                              })
                                            : n.attr({
                                                  width: r.attr('width'),
                                                  height: r.attr('height'),
                                              })),
                                    n.attr({ style: r.attr('style') }),
                                    i = (o = r.attributes).length;
                                i--;

                            ) {
                                const m = o[i].name;
                                m.indexOf('data-mce-p-') === 0 &&
                                    n.attr(m.substr(11), o[i].value);
                            }
                            u === 'script' && n.attr('type', 'text/javascript'),
                                (a = r.attr('data-mce-html')) &&
                                    (((c = new ye('#text', 3)).raw = !0),
                                    (c.value = je(d, unescape(a))),
                                    n.append(c)),
                                r.replace(n);
                        }
                });
        }),
            d.on('SetContent', function() {
                d.$('span.mce-preview-object').each(function(e, t) {
                    const r = d.$(t);
                    r.find('span.mce-shim').length === 0 &&
                        r.append('<span class="mce-shim"></span>');
                });
            });
    };
    const _e = function(e) {
        e.on('ResolveName', function(e) {
            let t;
            e.target.nodeType === 1 &&
                (t = e.target.getAttribute('data-mce-object')) &&
                (e.name = t);
        });
    };
    const Ce = function(t) {
        t.on('click keyup touchend', function() {
            const e = t.selection.getNode();
            e &&
                t.dom.hasClass(e, 'mce-preview-object') &&
                t.dom.getAttrib(e, 'data-mce-selected') &&
                e.setAttribute('data-mce-selected', '2');
        }),
            t.on('ObjectSelected', function(e) {
                const t = e.target.getAttribute('data-mce-object');
                (t !== 'audio' && t !== 'script') || e.preventDefault();
            }),
            t.on('ObjectResized', function(e) {
                let t;
                const r = e.target;
                r.getAttribute('data-mce-object') &&
                    (t = r.getAttribute('data-mce-html')) &&
                    ((t = unescape(t)),
                    r.setAttribute(
                        'data-mce-html',
                        escape(
                            de(t, {
                                width: String(e.width),
                                height: String(e.height),
                            }),
                        ),
                    ));
            });
    };
    const Me = function(e) {
        e.ui.registry.addToggleButton('media', {
            tooltip: 'Insert/edit media',
            icon: 'embed',
            onAction() {
                e.execCommand('mceMedia');
            },
            onSetup: (function(t, r) {
                return function(e) {
                    return t.selection.selectorChangedWithUnbind(
                        r.join(','),
                        e.setActive,
                    ).unbind;
                };
            })(e, [
                'img[data-mce-object]',
                'span[data-mce-object]',
                'div[data-ephox-embed-iri]',
            ]),
        }),
            e.ui.registry.addMenuItem('media', {
                icon: 'embed',
                text: 'Media...',
                onAction() {
                    e.execCommand('mceMedia');
                },
            });
    };
    !(function Fe() {
        n.add('media', function(e) {
            return we(e), Me(e), _e(e), Se(e), Ce(e), be(e);
        });
    })();
})();
