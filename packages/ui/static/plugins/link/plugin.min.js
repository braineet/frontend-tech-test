/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.1.6 (2020-01-28)
 */
!(function(c) {
    function n(t) {
        return function(n) {
            return (
                (function(n) {
                    if (n === null) return 'null';
                    const t = typeof n;
                    return t == 'object' &&
                        (Array.prototype.isPrototypeOf(n) ||
                            (n.constructor && n.constructor.name === 'Array'))
                        ? 'array'
                        : t == 'object' &&
                          (String.prototype.isPrototypeOf(n) ||
                              (n.constructor &&
                                  n.constructor.name === 'String'))
                        ? 'string'
                        : t;
                })(n) === t
            );
        };
    }
    function u() {}
    function i(n) {
        return function() {
            return n;
        };
    }
    function t() {
        return A;
    }
    let e;
    const r = tinymce.util.Tools.resolve('tinymce.PluginManager');
    const o = tinymce.util.Tools.resolve('tinymce.util.VK');
    const a = n('string');
    const f = n('array');
    const l = n('boolean');
    const s = n('function');
    const d = function(n) {
        const t = n.getParam('link_assume_external_targets', !1);
        return l(t) && t ? 1 : !a(t) || (t !== 'http' && t !== 'https') ? 0 : t;
    };
    const m = function(n) {
        return n.getParam('link_context_toolbar', !1, 'boolean');
    };
    const h = function(n) {
        return n.getParam('link_list');
    };
    const p = function(n) {
        return n.getParam('default_link_target');
    };
    const g = function(n) {
        return n.getParam('target_list', !0);
    };
    const v = function(n) {
        return n.getParam('rel_list', [], 'array');
    };
    const y = function(n) {
        return n.getParam('link_class_list', [], 'array');
    };
    const w = function(n) {
        return n.getParam('link_title', !0, 'boolean');
    };
    const x = function(n) {
        return n.getParam('allow_unsafe_link_target', !1, 'boolean');
    };
    const k = function(n) {
        return n.getParam('link_quicklink', !1, 'boolean');
    };
    const b = function(n) {
        const t = c.document.createElement('a');
        (t.target = '_blank'), (t.href = n), (t.rel = 'noreferrer noopener');
        const e = c.document.createEvent('MouseEvents');
        e.initMouseEvent(
            'click',
            !0,
            !0,
            c.window,
            0,
            0,
            0,
            0,
            0,
            !1,
            !1,
            !1,
            !1,
            0,
            null,
        ),
            (function(n, t) {
                c.document.body.appendChild(n),
                    n.dispatchEvent(t),
                    c.document.body.removeChild(n);
            })(t, e);
    };
    var _ = function() {
        return (_ =
            Object.assign ||
            function(n) {
                for (var t, e = 1, r = arguments.length; e < r; e++)
                    for (const o in (t = arguments[e]))
                        Object.prototype.hasOwnProperty.call(t, o) &&
                            (n[o] = t[o]);
                return n;
            }).apply(this, arguments);
    };
    const T = i(!1);
    const O = i(!0);
    var A =
        ((e = {
            fold(n, t) {
                return n();
            },
            is: T,
            isSome: T,
            isNone: O,
            getOr: N,
            getOrThunk: P,
            getOrDie(n) {
                throw new Error(n || 'error: getOrDie called on none.');
            },
            getOrNull: i(null),
            getOrUndefined: i(undefined),
            or: N,
            orThunk: P,
            map: t,
            each: u,
            bind: t,
            exists: T,
            forall: O,
            filter: t,
            equals: C,
            equals_: C,
            toArray() {
                return [];
            },
            toString: i('none()'),
        }),
        Object.freeze && Object.freeze(e),
        e);
    function C(n) {
        return n.isNone();
    }
    function P(n) {
        return n();
    }
    function N(n) {
        return n;
    }
    function E(n, t) {
        return (
            (function(n, t) {
                return Q.call(n, t);
            })(n, t) > -1
        );
    }
    function I(n, t) {
        for (let e = 0, r = n.length; e < r; e++) {
            t(n[e], e);
        }
    }
    function S(n) {
        for (var t = [], e = 0, r = n.length; e < r; ++e) {
            if (!f(n[e]))
                throw new Error(
                    `Arr.flatten item ${e} was not an array, input: ${n}`,
                );
            Y.apply(t, n[e]);
        }
        return t;
    }
    function j(n, t) {
        const e = (function(n, t) {
            for (var e = n.length, r = new Array(e), o = 0; o < e; o++) {
                const i = n[o];
                r[o] = t(i, o);
            }
            return r;
        })(n, t);
        return S(e);
    }
    function F(n) {
        return /^\w+:/i.test(n);
    }
    function L(n, t) {
        let e;
        let r;
        const o = ['noopener'];
        const i = n ? n.split(/\s+/) : [];
        const u = function(n) {
            return n.filter(function(n) {
                return Z.inArray(o, n) === -1;
            });
        };
        const c = t ? ((e = u((e = i))).length > 0 ? e.concat(o) : o) : u(i);
        return c.length > 0 ? ((r = c), Z.trim(r.sort().join(' '))) : '';
    }
    function R(n, t) {
        return (
            (t = t || n.selection.getNode()),
            nn(t)
                ? n.dom.select('a[href]', t)[0]
                : n.dom.getParent(t, 'a[href]')
        );
    }
    function D(n) {
        return n && n.nodeName === 'A' && !!n.href;
    }
    function U(n) {
        return (function(n, t, e) {
            return (
                I(n, function(n) {
                    e = t(e, n);
                }),
                e
            );
        })(
            ['title', 'rel', 'class', 'target'],
            function(t, e) {
                return (
                    n[e].each(function(n) {
                        t[e] = n.length > 0 ? n : null;
                    }),
                    t
                );
            },
            { href: n.href },
        );
    }
    function M(n, t) {
        const e = { ...t };
        if (!(v(n).length > 0) && !1 === x(n)) {
            const r = L(e.rel, e.target === '_blank');
            e.rel = r || null;
        }
        return (
            J.from(e.target).isNone() && !1 === g(n) && (e.target = p(n)),
            (e.href = (function(n, t) {
                return (t !== 'http' && t !== 'https') || F(n)
                    ? n
                    : `${t}://${n}`;
            })(e.href, d(n))),
            e
        );
    }
    function z(n, t) {
        for (let e = 0; e < n.length; e++) {
            const r = t(n[e], e);
            if (r.isSome()) return r;
        }
        return J.none();
    }
    function q(n) {
        return a(n.value) ? n.value : '';
    }
    function K(t) {
        return (
            void 0 === t && (t = q),
            function(n) {
                return J.from(n).map(function(n) {
                    return (function(n, r) {
                        const o = [];
                        return (
                            Z.each(n, function(n) {
                                const t = a(n.text)
                                    ? n.text
                                    : a(n.title)
                                    ? n.title
                                    : '';
                                if (n.menu !== undefined);
                                else {
                                    const e = r(n);
                                    o.push({ text: t, value: e });
                                }
                            }),
                            o
                        );
                    })(n, t);
                });
            }
        );
    }
    function B(t, n, e, r) {
        const o = r[n];
        const i = t.length > 0;
        return o !== undefined
            ? (function(t, n) {
                  return z(n, function(n) {
                      return J.some(n).filter(function(n) {
                          return n.value === t;
                      });
                  });
              })(o, e).map(function(n) {
                  return {
                      url: {
                          value: n.value,
                          meta: { text: i ? t : n.text, attach: u },
                      },
                      text: i ? t : n.text,
                  };
              })
            : J.none();
    }
    let V;
    let W;
    let H;
    let $;
    var G = function(e) {
        function n() {
            return o;
        }
        function t(n) {
            return n(e);
        }
        const r = i(e);
        var o = {
            fold(n, t) {
                return t(e);
            },
            is(n) {
                return e === n;
            },
            isSome: O,
            isNone: T,
            getOr: r,
            getOrThunk: r,
            getOrDie: r,
            getOrNull: r,
            getOrUndefined: r,
            or: n,
            orThunk: n,
            map(n) {
                return G(n(e));
            },
            each(n) {
                n(e);
            },
            bind: t,
            exists: t,
            forall: t,
            filter(n) {
                return n(e) ? o : A;
            },
            toArray() {
                return [e];
            },
            toString() {
                return `some(${e})`;
            },
            equals(n) {
                return n.is(e);
            },
            equals_(n, t) {
                return n.fold(T, function(n) {
                    return t(e, n);
                });
            },
        };
        return o;
    };
    var J = {
        some: G,
        none: t,
        from(n) {
            return n === null || n === undefined ? A : G(n);
        },
    };
    const X = Array.prototype.slice;
    var Q = Array.prototype.indexOf;
    var Y = Array.prototype.push;
    var Z =
        (s(Array.from) && Array.from,
        tinymce.util.Tools.resolve('tinymce.util.Tools'));
    var nn = function(n) {
        return n && n.nodeName === 'FIGURE' && /\bimage\b/i.test(n.className);
    };
    const tn = function(n, t) {
        const e = n.dom.select('img', t)[0];
        if (e) {
            const r = n.dom.getParents(e, 'a[href]', t)[0];
            r && (r.parentNode.insertBefore(e, r), n.dom.remove(r));
        }
    };
    const en = function(n, t, e) {
        const r = n.dom.select('img', t)[0];
        if (r) {
            const o = n.dom.create('a', e);
            r.parentNode.insertBefore(o, r), o.appendChild(r);
        }
    };
    const rn = function(n, t, e) {
        const r = n.selection.getNode();
        const o = R(n, r);
        const i = M(n, U(e));
        n.undoManager.transact(function() {
            e.href === t.href && t.attach(),
                o
                    ? (n.focus(),
                      (function(n, t, e, r) {
                          e.each(function(n) {
                              t.hasOwnProperty('innerText')
                                  ? (t.innerText = n)
                                  : (t.textContent = n);
                          }),
                              n.dom.setAttribs(t, r),
                              n.selection.select(t);
                      })(n, o, e.text, i))
                    : (function(t, n, e, r) {
                          nn(n)
                              ? en(t, n, r)
                              : e.fold(
                                    function() {
                                        t.execCommand('mceInsertLink', !1, r);
                                    },
                                    function(n) {
                                        t.insertContent(
                                            t.dom.createHTML(
                                                'a',
                                                r,
                                                t.dom.encode(n),
                                            ),
                                        );
                                    },
                                );
                      })(n, r, e.text, i);
        });
    };
    const on = function(e) {
        e.undoManager.transact(function() {
            const n = e.selection.getNode();
            if (nn(n)) tn(e, n);
            else {
                const t = e.dom.getParent(n, 'a[href]', e.getBody());
                t && e.dom.remove(t, !0);
            }
            e.focus();
        });
    };
    const un = function(n) {
        return Z.grep(n, D).length > 0;
    };
    const cn = function(n) {
        const t = n.getAttribute('data-mce-href');
        return t || n.getAttribute('href');
    };
    const an = function(n) {
        return !(
            /</.test(n) &&
            (!/^<a [^>]+>[^<]+<\/a>$/.test(n) || n.indexOf('href=') === -1)
        );
    };
    const fn = R;
    const ln = function(n, t) {
        return (function(n) {
            return n.replace(/\uFEFF/g, '');
        })(t ? t.innerText || t.textContent : n.getContent({ format: 'text' }));
    };
    const sn = L;
    const dn = F;
    const mn = {
        sanitize(n) {
            return K(q)(n);
        },
        sanitizeWith: K,
        createUi(t, e) {
            return function(n) {
                return { name: t, type: 'selectbox', label: e, items: n };
            };
        },
        getValue: q,
    };
    var hn = function(n) {
        function t() {
            return e;
        }
        var e = n;
        return {
            get: t,
            set(n) {
                e = n;
            },
            clone() {
                return hn(t());
            },
        };
    };
    const pn = function(n, r) {
        function e(n, t) {
            const e = (function(n, t) {
                return t === 'link'
                    ? n.catalogs.link
                    : t === 'anchor'
                    ? n.catalogs.anchor
                    : J.none();
            })(r, t.name).getOr([]);
            return B(o.get(), t.name, e, n);
        }
        var o = hn(n.text);
        return {
            onChange(n, t) {
                return t.name === 'url'
                    ? (function(n) {
                          if (o.get().length <= 0) {
                              const t =
                                  n.url.meta.text !== undefined
                                      ? n.url.meta.text
                                      : n.url.value;
                              return J.some({ text: t });
                          }
                          return J.none();
                      })(n())
                    : E(['anchor', 'link'], t.name)
                    ? e(n(), t)
                    : (t.name === 'text' && o.set(n().text), J.none());
            },
        };
    };
    const gn = {};
    const vn = { exports: gn };
    (V = undefined),
        (W = gn),
        (H = vn),
        ($ = undefined),
        (function(n) {
            typeof W === 'object' && void 0 !== H
                ? (H.exports = n())
                : typeof V === 'function' && V.amd
                ? V([], n)
                : ((typeof window !== 'undefined'
                      ? window
                      : typeof global !== 'undefined'
                      ? global
                      : typeof self !== 'undefined'
                      ? self
                      : this
                  ).EphoxContactWrapper = n());
        })(function() {
            return (function l(i, u, c) {
                function a(t, n) {
                    if (!u[t]) {
                        if (!i[t]) {
                            const e = typeof $ === 'function' && $;
                            if (!n && e) return e(t, !0);
                            if (f) return f(t, !0);
                            const r = new Error(`Cannot find module '${t}'`);
                            throw ((r.code = 'MODULE_NOT_FOUND'), r);
                        }
                        const o = (u[t] = { exports: {} });
                        i[t][0].call(
                            o.exports,
                            function(n) {
                                return a(i[t][1][n] || n);
                            },
                            o,
                            o.exports,
                            l,
                            i,
                            u,
                            c,
                        );
                    }
                    return u[t].exports;
                }
                for (
                    var f = typeof $ === 'function' && $, n = 0;
                    n < c.length;
                    n++
                )
                    a(c[n]);
                return a;
            })(
                {
                    1: [
                        function(n, t, e) {
                            let r;
                            let o;
                            const i = (t.exports = {});
                            function u() {
                                throw new Error(
                                    'setTimeout has not been defined',
                                );
                            }
                            function c() {
                                throw new Error(
                                    'clearTimeout has not been defined',
                                );
                            }
                            function a(n) {
                                if (r === setTimeout) return setTimeout(n, 0);
                                if ((r === u || !r) && setTimeout)
                                    return (r = setTimeout), setTimeout(n, 0);
                                try {
                                    return r(n, 0);
                                } catch (t) {
                                    try {
                                        return r.call(null, n, 0);
                                    } catch (t) {
                                        return r.call(this, n, 0);
                                    }
                                }
                            }
                            !(function() {
                                try {
                                    r =
                                        typeof setTimeout === 'function'
                                            ? setTimeout
                                            : u;
                                } catch (n) {
                                    r = u;
                                }
                                try {
                                    o =
                                        typeof clearTimeout === 'function'
                                            ? clearTimeout
                                            : c;
                                } catch (n) {
                                    o = c;
                                }
                            })();
                            let f;
                            let l = [];
                            let s = !1;
                            let d = -1;
                            function m() {
                                s &&
                                    f &&
                                    ((s = !1),
                                    f.length ? (l = f.concat(l)) : (d = -1),
                                    l.length && h());
                            }
                            function h() {
                                if (!s) {
                                    const n = a(m);
                                    s = !0;
                                    for (let t = l.length; t; ) {
                                        for (f = l, l = []; ++d < t; )
                                            f && f[d].run();
                                        (d = -1), (t = l.length);
                                    }
                                    (f = null),
                                        (s = !1),
                                        (function e(n) {
                                            if (o === clearTimeout)
                                                return clearTimeout(n);
                                            if ((o === c || !o) && clearTimeout)
                                                return (
                                                    (o = clearTimeout),
                                                    clearTimeout(n)
                                                );
                                            try {
                                                return o(n);
                                            } catch (t) {
                                                try {
                                                    return o.call(null, n);
                                                } catch (t) {
                                                    return o.call(this, n);
                                                }
                                            }
                                        })(n);
                                }
                            }
                            function p(n, t) {
                                (this.fun = n), (this.array = t);
                            }
                            function g() {}
                            (i.nextTick = function(n) {
                                const t = new Array(arguments.length - 1);
                                if (arguments.length > 1)
                                    for (let e = 1; e < arguments.length; e++)
                                        t[e - 1] = arguments[e];
                                l.push(new p(n, t)),
                                    l.length !== 1 || s || a(h);
                            }),
                                (p.prototype.run = function() {
                                    this.fun.apply(null, this.array);
                                }),
                                (i.title = 'browser'),
                                (i.browser = !0),
                                (i.env = {}),
                                (i.argv = []),
                                (i.version = ''),
                                (i.versions = {}),
                                (i.on = g),
                                (i.addListener = g),
                                (i.once = g),
                                (i.off = g),
                                (i.removeListener = g),
                                (i.removeAllListeners = g),
                                (i.emit = g),
                                (i.prependListener = g),
                                (i.prependOnceListener = g),
                                (i.listeners = function(n) {
                                    return [];
                                }),
                                (i.binding = function(n) {
                                    throw new Error(
                                        'process.binding is not supported',
                                    );
                                }),
                                (i.cwd = function() {
                                    return '/';
                                }),
                                (i.chdir = function(n) {
                                    throw new Error(
                                        'process.chdir is not supported',
                                    );
                                }),
                                (i.umask = function() {
                                    return 0;
                                });
                        },
                        {},
                    ],
                    2: [
                        function(n, s, t) {
                            (function(t) {
                                function r() {}
                                function i(n) {
                                    if (typeof this !== 'object')
                                        throw new TypeError(
                                            'Promises must be constructed via new',
                                        );
                                    if (typeof n !== 'function')
                                        throw new TypeError('not a function');
                                    (this._state = 0),
                                        (this._handled = !1),
                                        (this._value = undefined),
                                        (this._deferreds = []),
                                        l(n, this);
                                }
                                function o(r, o) {
                                    for (; r._state === 3; ) r = r._value;
                                    r._state !== 0
                                        ? ((r._handled = !0),
                                          i._immediateFn(function() {
                                              const n =
                                                  r._state === 1
                                                      ? o.onFulfilled
                                                      : o.onRejected;
                                              if (n !== null) {
                                                  let t;
                                                  try {
                                                      t = n(r._value);
                                                  } catch (e) {
                                                      return void c(
                                                          o.promise,
                                                          e,
                                                      );
                                                  }
                                                  u(o.promise, t);
                                              } else (r._state === 1 ? u : c)(o.promise, r._value);
                                          }))
                                        : r._deferreds.push(o);
                                }
                                function u(n, t) {
                                    try {
                                        if (t === n)
                                            throw new TypeError(
                                                'A promise cannot be resolved with itself.',
                                            );
                                        if (
                                            t &&
                                            (typeof t === 'object' ||
                                                typeof t === 'function')
                                        ) {
                                            const e = t.then;
                                            if (t instanceof i)
                                                return (
                                                    (n._state = 3),
                                                    (n._value = t),
                                                    void a(n)
                                                );
                                            if (typeof e === 'function')
                                                return void l(
                                                    (function r(n, t) {
                                                        return function() {
                                                            n.apply(
                                                                t,
                                                                arguments,
                                                            );
                                                        };
                                                    })(e, t),
                                                    n,
                                                );
                                        }
                                        (n._state = 1), (n._value = t), a(n);
                                    } catch (o) {
                                        c(n, o);
                                    }
                                }
                                function c(n, t) {
                                    (n._state = 2), (n._value = t), a(n);
                                }
                                function a(n) {
                                    n._state === 2 &&
                                        n._deferreds.length === 0 &&
                                        i._immediateFn(function() {
                                            n._handled ||
                                                i._unhandledRejectionFn(
                                                    n._value,
                                                );
                                        });
                                    for (
                                        let t = 0, e = n._deferreds.length;
                                        t < e;
                                        t++
                                    )
                                        o(n, n._deferreds[t]);
                                    n._deferreds = null;
                                }
                                function f(n, t, e) {
                                    (this.onFulfilled =
                                        typeof n === 'function' ? n : null),
                                        (this.onRejected =
                                            typeof t === 'function' ? t : null),
                                        (this.promise = e);
                                }
                                function l(n, t) {
                                    let e = !1;
                                    try {
                                        n(
                                            function(n) {
                                                e || ((e = !0), u(t, n));
                                            },
                                            function(n) {
                                                e || ((e = !0), c(t, n));
                                            },
                                        );
                                    } catch (r) {
                                        if (e) return;
                                        (e = !0), c(t, r);
                                    }
                                }
                                let n;
                                let e;
                                (n = this),
                                    (e = setTimeout),
                                    (i.prototype.catch = function(n) {
                                        return this.then(null, n);
                                    }),
                                    (i.prototype.then = function(n, t) {
                                        const e = new this.constructor(r);
                                        return o(this, new f(n, t, e)), e;
                                    }),
                                    (i.all = function(n) {
                                        const a = Array.prototype.slice.call(n);
                                        return new i(function(o, i) {
                                            if (a.length === 0) return o([]);
                                            let u = a.length;
                                            function c(t, n) {
                                                try {
                                                    if (
                                                        n &&
                                                        (typeof n ===
                                                            'object' ||
                                                            typeof n ===
                                                                'function')
                                                    ) {
                                                        const e = n.then;
                                                        if (
                                                            typeof e ===
                                                            'function'
                                                        )
                                                            return void e.call(
                                                                n,
                                                                function(n) {
                                                                    c(t, n);
                                                                },
                                                                i,
                                                            );
                                                    }
                                                    (a[t] = n),
                                                        --u == 0 && o(a);
                                                } catch (r) {
                                                    i(r);
                                                }
                                            }
                                            for (let n = 0; n < a.length; n++)
                                                c(n, a[n]);
                                        });
                                    }),
                                    (i.resolve = function(t) {
                                        return t &&
                                            typeof t === 'object' &&
                                            t.constructor === i
                                            ? t
                                            : new i(function(n) {
                                                  n(t);
                                              });
                                    }),
                                    (i.reject = function(e) {
                                        return new i(function(n, t) {
                                            t(e);
                                        });
                                    }),
                                    (i.race = function(o) {
                                        return new i(function(n, t) {
                                            for (
                                                let e = 0, r = o.length;
                                                e < r;
                                                e++
                                            )
                                                o[e].then(n, t);
                                        });
                                    }),
                                    (i._immediateFn =
                                        typeof t === 'function'
                                            ? function(n) {
                                                  t(n);
                                              }
                                            : function(n) {
                                                  e(n, 0);
                                              }),
                                    (i._unhandledRejectionFn = function(n) {
                                        typeof console !== 'undefined' &&
                                            console &&
                                            console.warn(
                                                'Possible Unhandled Promise Rejection:',
                                                n,
                                            );
                                    }),
                                    (i._setImmediateFn = function(n) {
                                        i._immediateFn = n;
                                    }),
                                    (i._setUnhandledRejectionFn = function(n) {
                                        i._unhandledRejectionFn = n;
                                    }),
                                    void 0 !== s && s.exports
                                        ? (s.exports = i)
                                        : n.Promise || (n.Promise = i);
                            }.call(this, n('timers').setImmediate));
                        },
                        { timers: 3 },
                    ],
                    3: [
                        function(a, n, f) {
                            (function(n, t) {
                                const r = a('process/browser.js').nextTick;
                                const e = Function.prototype.apply;
                                const o = Array.prototype.slice;
                                const i = {};
                                let u = 0;
                                function c(n, t) {
                                    (this._id = n), (this._clearFn = t);
                                }
                                (f.setTimeout = function() {
                                    return new c(
                                        e.call(setTimeout, window, arguments),
                                        clearTimeout,
                                    );
                                }),
                                    (f.setInterval = function() {
                                        return new c(
                                            e.call(
                                                setInterval,
                                                window,
                                                arguments,
                                            ),
                                            clearInterval,
                                        );
                                    }),
                                    (f.clearTimeout = f.clearInterval = function(
                                        n,
                                    ) {
                                        n.close();
                                    }),
                                    (c.prototype.unref = c.prototype.ref = function() {}),
                                    (c.prototype.close = function() {
                                        this._clearFn.call(window, this._id);
                                    }),
                                    (f.enroll = function(n, t) {
                                        clearTimeout(n._idleTimeoutId),
                                            (n._idleTimeout = t);
                                    }),
                                    (f.unenroll = function(n) {
                                        clearTimeout(n._idleTimeoutId),
                                            (n._idleTimeout = -1);
                                    }),
                                    (f._unrefActive = f.active = function(n) {
                                        clearTimeout(n._idleTimeoutId);
                                        const t = n._idleTimeout;
                                        t >= 0 &&
                                            (n._idleTimeoutId = setTimeout(
                                                function() {
                                                    n._onTimeout &&
                                                        n._onTimeout();
                                                },
                                                t,
                                            ));
                                    }),
                                    (f.setImmediate =
                                        typeof n === 'function'
                                            ? n
                                            : function(n) {
                                                  const t = u++;
                                                  const e =
                                                      !(arguments.length < 2) &&
                                                      o.call(arguments, 1);
                                                  return (
                                                      (i[t] = !0),
                                                      r(function() {
                                                          i[t] &&
                                                              (e
                                                                  ? n.apply(
                                                                        null,
                                                                        e,
                                                                    )
                                                                  : n.call(
                                                                        null,
                                                                    ),
                                                              f.clearImmediate(
                                                                  t,
                                                              ));
                                                      }),
                                                      t
                                                  );
                                              }),
                                    (f.clearImmediate =
                                        typeof t === 'function'
                                            ? t
                                            : function(n) {
                                                  delete i[n];
                                              });
                            }.call(
                                this,
                                a('timers').setImmediate,
                                a('timers').clearImmediate,
                            ));
                        },
                        { 'process/browser.js': 1, timers: 3 },
                    ],
                    4: [
                        function(n, t, e) {
                            const r = n('promise-polyfill');
                            const o =
                                typeof window !== 'undefined'
                                    ? window
                                    : Function('return this;')();
                            t.exports = { boltExport: o.Promise || r };
                        },
                        { 'promise-polyfill': 2 },
                    ],
                },
                {},
                [4],
            )(4);
        });
    function yn(n) {
        c.setTimeout(function() {
            throw n;
        }, 0);
    }
    function wn(n) {
        const t = n.href;
        return t.indexOf('@') > 0 &&
            t.indexOf('//') === -1 &&
            t.indexOf('mailto:') === -1
            ? J.some({
                  message:
                      'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?',
                  preprocess(n) {
                      return { ...n, href: `mailto:${t}` };
                  },
              })
            : J.none();
    }
    function xn(n, t, e) {
        const r = n.getAttrib(t, e);
        return r !== null && r.length > 0 ? J.some(r) : J.none();
    }
    function kn(n, t) {
        return n.dom.getParent(t, 'a[href]');
    }
    function bn(n) {
        return kn(n, n.selection.getStart());
    }
    function _n(n, t) {
        if (t) {
            const e = cn(t);
            if (/^#/.test(e)) {
                const r = n.$(e);
                r.length && n.selection.scrollIntoView(r[0], !0);
            } else b(t.href);
        }
    }
    const Tn = vn.exports.boltExport;
    var On = function(n) {
        let e = J.none();
        let t = [];
        const r = function(n) {
            o() ? u(n) : t.push(n);
        };
        var o = function() {
            return e.isSome();
        };
        const i = function(n) {
            I(n, u);
        };
        var u = function(t) {
            e.each(function(n) {
                c.setTimeout(function() {
                    t(n);
                }, 0);
            });
        };
        return (
            n(function(n) {
                (e = J.some(n)), i(t), (t = []);
            }),
            {
                get: r,
                map(e) {
                    return On(function(t) {
                        r(function(n) {
                            t(e(n));
                        });
                    });
                },
                isReady: o,
            }
        );
    };
    const An = {
        nu: On,
        pure(t) {
            return On(function(n) {
                n(t);
            });
        },
    };
    var Cn = function(e) {
        function n(n) {
            e().then(n, yn);
        }
        return {
            map(n) {
                return Cn(function() {
                    return e().then(n);
                });
            },
            bind(t) {
                return Cn(function() {
                    return e().then(function(n) {
                        return t(n).toPromise();
                    });
                });
            },
            anonBind(n) {
                return Cn(function() {
                    return e().then(function() {
                        return n.toPromise();
                    });
                });
            },
            toLazy() {
                return An.nu(n);
            },
            toCached() {
                let n = null;
                return Cn(function() {
                    return n === null && (n = e()), n;
                });
            },
            toPromise: e,
            get: n,
        };
    };
    const Pn = function(n) {
        return Cn(function() {
            return new Tn(n);
        });
    };
    const Nn = function(n) {
        return Cn(function() {
            return Tn.resolve(n);
        });
    };
    const En = tinymce.util.Tools.resolve('tinymce.util.Delay');
    const In = function(n, t, r) {
        return z(
            [
                wn,
                (function(e) {
                    return function(n) {
                        const t = n.href;
                        return (e === 1 && !dn(t)) ||
                            (e === 0 && /^\s*www[\.|\d\.]/i.test(t))
                            ? J.some({
                                  message:
                                      'The URL you entered seems to be an external link. Do you want to add the required http:// prefix?',
                                  preprocess(n) {
                                      return { ...n, href: `http://${t}` };
                                  },
                              })
                            : J.none();
                    };
                })(t),
            ],
            function(n) {
                return n(r);
            },
        ).fold(
            function() {
                return Nn(r);
            },
            function(e) {
                return Pn(function(t) {
                    !(function(t, n, e) {
                        const r = t.selection.getRng();
                        En.setEditorTimeout(t, function() {
                            t.windowManager.confirm(n, function(n) {
                                t.selection.setRng(r), e(n);
                            });
                        });
                    })(n, e.message, function(n) {
                        t(n ? e.preprocess(r) : r);
                    });
                });
            },
        );
    };
    const Sn = function(n) {
        const t = n.dom.select('a:not([href])');
        const e = j(t, function(n) {
            const t = n.name || n.id;
            return t ? [{ text: t, value: `#${t}` }] : [];
        });
        return e.length > 0
            ? J.some([{ text: 'None', value: '' }].concat(e))
            : J.none();
    };
    const jn = function(n) {
        const t = y(n);
        return t.length > 0 ? mn.sanitize(t) : J.none();
    };
    const Fn = tinymce.util.Tools.resolve('tinymce.util.XHR');
    const Ln = function(t) {
        function e(n) {
            return t.convertURL(n.value || n.url, 'href');
        }
        const n = h(t);
        return Pn(function(t) {
            a(n)
                ? Fn.send({
                      url: n,
                      success(n) {
                          return t(
                              (function(n) {
                                  try {
                                      return J.some(JSON.parse(n));
                                  } catch (t) {
                                      return J.none();
                                  }
                              })(n),
                          );
                      },
                      error(n) {
                          return t(J.none());
                      },
                  })
                : s(n)
                ? n(function(n) {
                      return t(J.some(n));
                  })
                : t(J.from(n));
        }).map(function(n) {
            return n.bind(mn.sanitizeWith(e)).map(function(n) {
                return n.length > 0
                    ? [{ text: 'None', value: '' }].concat(n)
                    : n;
            });
        });
    };
    const Rn = function(n, t) {
        const e = v(n);
        if (e.length > 0) {
            const r = t.is('_blank');
            return (!1 === x(n)
                ? mn.sanitizeWith(function(n) {
                      return sn(mn.getValue(n), r);
                  })
                : mn.sanitize)(e);
        }
        return J.none();
    };
    const Dn = [
        { text: 'Current window', value: '' },
        { text: 'New window', value: '_blank' },
    ];
    const Un = function(n) {
        const t = g(n);
        return f(t)
            ? mn.sanitize(t).orThunk(function() {
                  return J.some(Dn);
              })
            : !1 === t
            ? J.none()
            : J.some(Dn);
    };
    const Mn = function(e, r) {
        return Ln(e).map(function(n) {
            const t = (function(n, t) {
                const e = n.dom;
                const r = an(n.selection.getContent())
                    ? J.some(ln(n.selection, t))
                    : J.none();
                const o = t ? J.some(e.getAttrib(t, 'href')) : J.none();
                const i = t ? J.from(e.getAttrib(t, 'target')) : J.none();
                const u = xn(e, t, 'rel');
                const c = xn(e, t, 'class');
                return {
                    url: o,
                    text: r,
                    title: xn(e, t, 'title'),
                    target: i,
                    rel: u,
                    linkClass: c,
                };
            })(e, r);
            return {
                anchor: t,
                catalogs: {
                    targets: Un(e),
                    rels: Rn(e, t.target),
                    classes: jn(e),
                    anchor: Sn(e),
                    link: n,
                },
                optNode: J.from(r),
                flags: { titleEnabled: w(e) },
            };
        });
    };
    const zn = function(t) {
        (function(n) {
            const t = fn(n);
            return Mn(n, t);
        })(t)
            .map(function(n) {
                return (function(n, t, e) {
                    const r = n.anchor.text
                        .map(function() {
                            return {
                                name: 'text',
                                type: 'input',
                                label: 'Text to display',
                            };
                        })
                        .toArray();
                    const o = n.flags.titleEnabled
                        ? [
                              {
                                  name: 'title',
                                  type: 'input',
                                  label: 'Title',
                              },
                          ]
                        : [];
                    const i = (function(n, t) {
                        return {
                            url: {
                                value: n.anchor.url.getOr(''),
                                meta: {
                                    attach() {},
                                    text: n.anchor.url.fold(
                                        function() {
                                            return '';
                                        },
                                        function() {
                                            return n.anchor.text.getOr('');
                                        },
                                    ),
                                    original: {
                                        value: n.anchor.url.getOr(''),
                                    },
                                },
                            },
                            text: n.anchor.text.getOr(''),
                            title: n.anchor.title.getOr(''),
                            anchor: n.anchor.url.getOr(''),
                            link: n.anchor.url.getOr(''),
                            rel: n.anchor.rel.getOr(''),
                            target: n.anchor.target.or(t).getOr(''),
                            linkClass: n.anchor.linkClass.getOr(''),
                        };
                    })(n, J.from(p(e)));
                    const u = pn(i, n);
                    const c = n.catalogs;
                    return {
                        title: 'Insert/Edit Link',
                        size: 'normal',
                        body: {
                            type: 'panel',
                            items: S([
                                [
                                    {
                                        name: 'url',
                                        type: 'urlinput',
                                        filetype: 'file',
                                        label: 'URL',
                                    },
                                ],
                                r,
                                o,
                                (function(n) {
                                    for (
                                        var t = [],
                                            e = function(n) {
                                                t.push(n);
                                            },
                                            r = 0;
                                        r < n.length;
                                        r++
                                    )
                                        n[r].each(e);
                                    return t;
                                })([
                                    c.anchor.map(
                                        mn.createUi('anchor', 'Anchors'),
                                    ),
                                    c.rels.map(mn.createUi('rel', 'Rel')),
                                    c.targets.map(
                                        mn.createUi(
                                            'target',
                                            'Open link in...',
                                        ),
                                    ),
                                    c.link.map(
                                        mn.createUi('link', 'Link list'),
                                    ),
                                    c.classes.map(
                                        mn.createUi('linkClass', 'Class'),
                                    ),
                                ]),
                            ]),
                        },
                        buttons: [
                            {
                                type: 'cancel',
                                name: 'cancel',
                                text: 'Cancel',
                            },
                            {
                                type: 'submit',
                                name: 'save',
                                text: 'Save',
                                primary: !0,
                            },
                        ],
                        initialData: i,
                        onChange(t, n) {
                            const e = n.name;
                            u.onChange(t.getData, { name: e }).each(function(
                                n,
                            ) {
                                t.setData(n);
                            });
                        },
                        onSubmit: t,
                    };
                })(
                    n,
                    (function(i, u, c) {
                        return function(n) {
                            const e = n.getData();
                            if (!e.url.value) return on(i), void n.close();
                            function t(t) {
                                return J.from(e[t]).filter(function(n) {
                                    return !u.anchor[t].is(n);
                                });
                            }
                            const r = {
                                href: e.url.value,
                                text: t('text'),
                                target: t('target'),
                                rel: t('rel'),
                                class: t('linkClass'),
                                title: t('title'),
                            };
                            const o = {
                                href: e.url.value,
                                attach:
                                    e.url.meta !== undefined &&
                                    e.url.meta.attach
                                        ? e.url.meta.attach
                                        : function() {},
                            };
                            In(i, c, r).get(function(n) {
                                rn(i, o, n);
                            }),
                                n.close();
                        };
                    })(t, n, d(t)),
                    t,
                );
            })
            .get(function(n) {
                t.windowManager.open(n);
            });
    };
    const qn = function(n) {
        return function() {
            zn(n);
        };
    };
    const Kn = function(n) {
        return function() {
            _n(n, bn(n));
        };
    };
    const Bn = function(e) {
        e.on('click', function(n) {
            const t = kn(e, n.target);
            t && o.metaKeyPressed(n) && (n.preventDefault(), _n(e, t));
        }),
            e.on('keydown', function(n) {
                const t = bn(e);
                t &&
                    n.keyCode === 13 &&
                    (function(n) {
                        return (
                            !0 === n.altKey &&
                            !1 === n.shiftKey &&
                            !1 === n.ctrlKey &&
                            !1 === n.metaKey
                        );
                    })(n) &&
                    (n.preventDefault(), _n(e, t));
            });
    };
    const Vn = function(e) {
        return function(t) {
            function n(n) {
                return t.setActive(!e.readonly && !!fn(e, n.element));
            }
            return (
                e.on('NodeChange', n),
                function() {
                    return e.off('NodeChange', n);
                }
            );
        };
    };
    const Wn = function(e) {
        return function(t) {
            t.setDisabled(!un(e.dom.getParents(e.selection.getStart())));
            function n(n) {
                return t.setDisabled(!un(n.parents));
            }
            return (
                e.on('NodeChange', n),
                function() {
                    return e.off('NodeChange', n);
                }
            );
        };
    };
    const Hn = function(n) {
        n.addCommand('mceLink', function() {
            k(n)
                ? n.fire('contexttoolbar-show', { toolbarKey: 'quicklink' })
                : qn(n)();
        });
    };
    const $n = function(n) {
        n.addShortcut('Meta+K', '', function() {
            n.execCommand('mceLink');
        });
    };
    const Gn = function(n) {
        n.ui.registry.addToggleButton('link', {
            icon: 'link',
            tooltip: 'Insert/edit link',
            onAction: qn(n),
            onSetup: Vn(n),
        }),
            n.ui.registry.addButton('openlink', {
                icon: 'new-tab',
                tooltip: 'Open link',
                onAction: Kn(n),
                onSetup: Wn(n),
            }),
            n.ui.registry.addButton('unlink', {
                icon: 'unlink',
                tooltip: 'Remove link',
                onAction() {
                    return on(n);
                },
                onSetup: Wn(n),
            });
    };
    const Jn = function(n) {
        n.ui.registry.addMenuItem('openlink', {
            text: 'Open link',
            icon: 'new-tab',
            onAction: Kn(n),
            onSetup: Wn(n),
        }),
            n.ui.registry.addMenuItem('link', {
                icon: 'link',
                text: 'Link...',
                shortcut: 'Meta+K',
                onAction: qn(n),
            }),
            n.ui.registry.addMenuItem('unlink', {
                icon: 'unlink',
                text: 'Remove link',
                onAction() {
                    return on(n);
                },
                onSetup: Wn(n),
            });
    };
    const Xn = function(t) {
        t.ui.registry.addContextMenu('link', {
            update(n) {
                return un(t.dom.getParents(n, 'a'))
                    ? 'link unlink openlink'
                    : 'link';
            },
        });
    };
    const Qn = function(i) {
        function n(n) {
            const t = i.selection.getNode();
            return n.setDisabled(!fn(i, t)), function() {};
        }
        i.ui.registry.addContextForm('quicklink', {
            launch: {
                type: 'contextformtogglebutton',
                icon: 'link',
                tooltip: 'Link',
                onSetup: Vn(i),
            },
            label: 'Link',
            predicate(n) {
                return !!fn(i, n) && m(i);
            },
            initValue() {
                const n = fn(i);
                return n ? cn(n) : '';
            },
            commands: [
                {
                    type: 'contextformtogglebutton',
                    icon: 'link',
                    tooltip: 'Link',
                    primary: !0,
                    onSetup(n) {
                        const t = i.selection.getNode();
                        return n.setActive(!!fn(i, t)), Vn(i)(n);
                    },
                    onAction(n) {
                        const t = fn(i);
                        const e = n.getValue();
                        if (t)
                            i.dom.setAttrib(t, 'href', e),
                                (function(n) {
                                    n.selection.collapse(!1);
                                })(i),
                                n.hide();
                        else {
                            const r = { href: e, attach() {} };
                            const o = an(i.selection.getContent())
                                ? J.some(ln(i.selection, t))
                                      .filter(function(n) {
                                          return n.length > 0;
                                      })
                                      .or(J.from(e))
                                : J.none();
                            rn(i, r, {
                                href: e,
                                text: o,
                                title: J.none(),
                                rel: J.none(),
                                target: J.none(),
                                class: J.none(),
                            }),
                                n.hide();
                        }
                    },
                },
                {
                    type: 'contextformbutton',
                    icon: 'unlink',
                    tooltip: 'Remove link',
                    onSetup: n,
                    onAction(n) {
                        on(i), n.hide();
                    },
                },
                {
                    type: 'contextformbutton',
                    icon: 'new-tab',
                    tooltip: 'Open link',
                    onSetup: n,
                    onAction(n) {
                        Kn(i)(), n.hide();
                    },
                },
            ],
        });
    };
    !(function Yn() {
        r.add('link', function(n) {
            Gn(n), Jn(n), Xn(n), Qn(n), Bn(n), Hn(n), $n(n);
        });
    })();
})(window);
